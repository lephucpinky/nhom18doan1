{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst reducer = combineReducers({\n  // userLogin: userLoginReducer,\n  // userList: userListReducer,\n  // productList: productListReducer,\n  // productDelete: productDeleteReducer,\n  // productCreate: productCreateReducer,\n  // productEdit: productEditReducer,\n  // productUpdate: productUpdateReducer,\n  // orderList: orderListReducer,\n  // orderDetails: orderDetailsReducer,\n  // orderDeliver: orderDeliveredReducer,\n});\n\n// login\n// const userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\n//   ? JSON.parse(localStorage.getItem(\"userInfo\"))\n//   : null;\n\nconst initialState = {\n  //   userLogin: { userInfo: userInfoFromLocalStorage },\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","reducer","initialState","middleware","store"],"sources":["C:/Users/Public/Documents/doan/admin-dashboard/src/redux/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst reducer = combineReducers({\r\n    // userLogin: userLoginReducer,\r\n    // userList: userListReducer,\r\n    // productList: productListReducer,\r\n    // productDelete: productDeleteReducer,\r\n    // productCreate: productCreateReducer,\r\n    // productEdit: productEditReducer,\r\n    // productUpdate: productUpdateReducer,\r\n    // orderList: orderListReducer,\r\n    // orderDetails: orderDetailsReducer,\r\n    // orderDeliver: orderDeliveredReducer,\r\n  });\r\n\r\n// login\r\n// const userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\r\n//   ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n//   : null;\r\n\r\nconst initialState = {\r\n//   userLogin: { userInfo: userInfoFromLocalStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,MAAMC,OAAO,GAAGJ,eAAe,CAAC;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACD,CAAC;;AAEJ;AACA;AACA;AACA;;AAEA,MAAMK,YAAY,GAAG;EACrB;AAAA,CACC;AAED,MAAMC,UAAU,GAAG,CAACJ,KAAK,CAAC;AAE1B,MAAMK,KAAK,GAAGR,WAAW,CACvBK,OAAO,EACPC,YAAY,EACZF,mBAAmB,CAACF,eAAe,CAAC,GAAGK,UAAU,CAAC,CACpD,CAAC;AAED,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}